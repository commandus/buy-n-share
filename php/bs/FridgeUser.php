<?php
// automatically generated by the FlatBuffers compiler, do not modify

namespace bs;

use \Google\FlatBuffers\Struct;
use \Google\FlatBuffers\Table;
use \Google\FlatBuffers\ByteBuffer;
use \Google\FlatBuffers\FlatBufferBuilder;

class FridgeUser extends Table
{
    /**
     * @param ByteBuffer $bb
     * @return FridgeUser
     */
    public static function getRootAsFridgeUser(ByteBuffer $bb)
    {
        $obj = new FridgeUser();
        return ($obj->init($bb->getInt($bb->getPosition()) + $bb->getPosition(), $bb));
    }

    /**
     * @param int $_i offset
     * @param ByteBuffer $_bb
     * @return FridgeUser
     **/
    public function init($_i, ByteBuffer $_bb)
    {
        $this->bb_pos = $_i;
        $this->bb = $_bb;
        return $this;
    }

    /**
     * @return ulong
     */
    public function getFridgeid()
    {
        $o = $this->__offset(4);
        return $o != 0 ? $this->bb->getUlong($o + $this->bb_pos) : 0;
    }

    public function getUser()
    {
        $obj = new User();
        $o = $this->__offset(6);
        return $o != 0 ? $obj->init($this->__indirect($o + $this->bb_pos), $this->bb) : 0;
    }

    /**
     * @return uint
     */
    public function getStart()
    {
        $o = $this->__offset(8);
        return $o != 0 ? $this->bb->getUint($o + $this->bb_pos) : 0;
    }

    /**
     * @return uint
     */
    public function getFinish()
    {
        $o = $this->__offset(10);
        return $o != 0 ? $this->bb->getUint($o + $this->bb_pos) : 0;
    }

    /**
     * @return long
     */
    public function getBalance()
    {
        $o = $this->__offset(12);
        return $o != 0 ? $this->bb->getLong($o + $this->bb_pos) : 0;
    }

    /**
     * @param FlatBufferBuilder $builder
     * @return void
     */
    public static function startFridgeUser(FlatBufferBuilder $builder)
    {
        $builder->StartObject(5);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @return FridgeUser
     */
    public static function createFridgeUser(FlatBufferBuilder $builder, $fridgeid, $user, $start, $finish, $balance)
    {
        $builder->startObject(5);
        self::addFridgeid($builder, $fridgeid);
        self::addUser($builder, $user);
        self::addStart($builder, $start);
        self::addFinish($builder, $finish);
        self::addBalance($builder, $balance);
        $o = $builder->endObject();
        return $o;
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param ulong
     * @return void
     */
    public static function addFridgeid(FlatBufferBuilder $builder, $fridgeid)
    {
        $builder->addUlongX(0, $fridgeid, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param int
     * @return void
     */
    public static function addUser(FlatBufferBuilder $builder, $user)
    {
        $builder->addOffsetX(1, $user, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param uint
     * @return void
     */
    public static function addStart(FlatBufferBuilder $builder, $start)
    {
        $builder->addUintX(2, $start, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param uint
     * @return void
     */
    public static function addFinish(FlatBufferBuilder $builder, $finish)
    {
        $builder->addUintX(3, $finish, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param long
     * @return void
     */
    public static function addBalance(FlatBufferBuilder $builder, $balance)
    {
        $builder->addLongX(4, $balance, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @return int table offset
     */
    public static function endFridgeUser(FlatBufferBuilder $builder)
    {
        $o = $builder->endObject();
        return $o;
    }
}
